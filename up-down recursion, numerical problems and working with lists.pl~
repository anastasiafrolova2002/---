%LB2

%ยน1

%max3(+X,+Y,+U,-Z) - puts in U max out of X, Y and Z
max3(X,Y,U,X):-X>Y,X>U,!.
max3(_,Y,U,Y):-Y>U,!.
max3(_,_,U,U).

%fact(+N,+X) where X is factorial of N
fact_up(0,1):-!.
fact_up(N,X):-N1 is N-1,fact_up(N1,X1),X is N*X1.

fact_down(N,X):-fact_down(0,1,N,X).
fact_down(N,Y,N,Y):-!.
fact_down(I,Y,N,X):-I1 is I+1, Y1 is Y*I1, fact_down(I1,Y1,N,X).

%sum_of_digits(+X,+S) - counts in S sum of digits of N
sum_of_digits_up(0, Y):-Y=0, !.
sum_of_digits_up(X, Y):-Z1 is X mod 10, Z2 is X div 10, sum_of_digits_up(Z2, Q), Y is Z1+Q.

% sum_list_up(+List,?Sum) - checks if Sum is sum of all elements of List, or if -Sum => counts the sum and gives it to Sum
sum_list_up([],0):-!.
sum_list_up([H|T],Sum):-sum_list_up(T,SumT),Sum is H+SumT.

% sum_list_down(+List,?Sum) - checks if Sum is sum of elements of List, or if -Sum => counts sum and gives it to Sum
sum_list_down(List,Sum):-sum_list_down(List,0,Sum).
sum_list_down([],Sum,Sum):-!.
sum_list_down([H|T],CurSum,Sum):-NewSum is CurSum+H,sum_list_down(T,NewSum,Sum).

